
Pré-requisitos: Conta no Azure, Azure DevOps, e uma aplicação web simples em um repositório Git (por exemplo, um aplicativo Hello World em Node.js).

Claro! Vamos começar do princípio:

Pré-requisito: Para esse guia, você precisará de uma conta na Azure e no Azure DevOps.

1. Criando um novo repositório no Azure Repos

Entre na sua conta do Azure DevOps.
Na página inicial, você verá a opção de criar um novo projeto. Clique em "New Project".
Dê um nome ao seu projeto e clique em "Create".
2. Importando ou carregando código para o Azure Repos

No novo projeto criado, vá para a seção "Repos" no menu lateral esquerdo.
Se você está começando um novo projeto, você pode criar um novo arquivo diretamente na interface do Azure DevOps e começar a escrever seu código.
3. Criando um arquivo de build (por exemplo, usando Node.js)

Se você está usando Node.js, geralmente, um arquivo package.json é usado para gerenciar as dependências e scripts de build do seu projeto.
Aqui está um exemplo simples de um package.json para um aplicativo Node.js:
{
  "name": "my-app",
  "version": "1.0.0",
  "description": "A simple Node.js app",
  "main": "app.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node app.js"
  },
  "dependencies": {
    "express": "^4.17.1"
  }
}


Vá para a seção "Pipelines" do seu projeto.
Clique em "Create Pipeline".
Escolha "Azure Repos Git" como localização do seu repositório.
Selecione o repositório que contém o seu aplicativo.
Escolha "Node.js" como modelo de pipeline para que o Azure DevOps crie automaticamente um arquivo yaml de pipeline com as etapas básicas para a construção de uma aplicação Node.js.
4. Configurar o pipeline de CI/CD

No pipeline de build, o Azure DevOps já deverá ter configurado as etapas para instalar dependências (npm install), rodar testes (por exemplo, npm test) e criar o build (por exemplo, npm run build). Se necessário, modifique estas etapas para que se adequem ao seu aplicativo.
Em seguida, vá para a seção "Releases" e clique em "New Release Pipeline".
Selecione o template "Azure App Service deployment" e clique em "Apply".
Clique em "Add an artifact" e selecione o build pipeline que você criou anteriormente.
Clique em "Add" para adicionar este artefato ao pipeline de release.
Clique no stage "Deploy to Azure App Service".
Selecione a assinatura Azure, o App Service que você deseja fazer deploy e a aplicação.
Clique em "Save" e depois "Create Release" para criar e executar o pipeline de release.
5. Verificar o deploy

Abra um navegador e vá para a URL do seu Azure App Service. Você deve ser capaz de ver a sua aplicação rodando.
6. Demonstrar o processo de CI/CD

Faça uma pequena alteração em seu código (por exemplo, altere a mensagem de saudação do Hello World).
Faça um commit e push dessas mudanças para o repositório no Azure Repos.
Observe o Azure DevOps executando automaticamente o pipeline de CI/CD e implantando as alterações no Azure App Service.
Atualize a página do Azure App Service em seu navegador para verificar que a alteração foi implantada corretamente.
Espero que este guia detalhado seja útil para você! Lembre-se de que os passos específicos podem variar dependendo do seu aplicativo e da configuração do seu ambiente.
